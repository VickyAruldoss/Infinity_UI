# Java Gradle CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-java/
version: 2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/node:18.16.0

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}

      - run: 
          name: Install Dependencies
          command: yarn install

      - save_cache:
          paths:
            - ./node_modules
          key: dependency-cache-{{ checksum "package-lock.json" }}

      - run: 
          name: Build React App
          command: yarn build
      - save_cache:
          key: app-build-cache-{{ .Branch }}
          paths:
            - ./build

  test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: cimg/node:18.16.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package-lock.json" }}

      - run: yarn test --coverage

  deploy:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: cimg/node:18.16.0

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Deploy to Netlify
          command: ./node_modules/.bin/netlify deploy --site 0ad85f80-e847-42d1-9d09-2d60f27fe33a --auth nfp_9U49a7JprWL5rKEEnUoTEHTaJJEpyUL25d03 --prod --dir=build

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test